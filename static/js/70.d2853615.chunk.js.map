{"version":3,"file":"static/js/70.d2853615.chunk.js","mappings":"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","sources":["../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util/is/function.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util/is/helpers.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util/is/object.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util/hex/toU8a.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util/is/promise.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util/node_modules/@polkadot/x-global/index.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util/node_modules/@polkadot/x-bigint/index.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util/has.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util/is/hex.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util/is/u8a.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util/node_modules/@polkadot/x-textencoder/fallback.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util/string/toU8a.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util/node_modules/@polkadot/x-textencoder/browser.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util/u8a/toU8a.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util/is/buffer.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util/u8a/eq.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util/u8a/concat.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util-crypto/node_modules/@scure/base/lib/esm/index.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util-crypto/base32/helpers.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util-crypto/base58/bs58.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util-crypto/node_modules/@noble/hashes/src/_assert.ts","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util-crypto/node_modules/@noble/hashes/src/utils.ts","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util-crypto/node_modules/@noble/hashes/src/_blake2.ts","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util-crypto/node_modules/@noble/hashes/src/_u64.ts","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util-crypto/node_modules/@noble/hashes/src/blake2b.ts","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util-crypto/blake2/asU8a.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util-crypto/address/sshash.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/defaults/ledger.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/defaults/genesis.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/defaults/icons.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/defaults/testnets.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util-crypto/node_modules/@polkadot/networks/interfaces.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util-crypto/address/defaults.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util-crypto/address/decode.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util-crypto/address/checksum.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util-crypto/address/encode.js","../node_modules/@polkadot/extension-dapp/packageInfo.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util/u8a/wrap.js","../node_modules/@polkadot/extension-dapp/wrapBytes.js","../node_modules/@polkadot/extension-dapp/bundle.js","../node_modules/@polkadot/extension-dapp/node_modules/@polkadot/util/object/spread.js","../node_modules/@polkadot/extension-dapp/util.js"],"sourcesContent":["/**\n * @name isFunction\n * @summary Tests for a `function`.\n * @description\n * Checks to see if the input value is a JavaScript function.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isFunction } from '@polkadot/util';\n *\n * isFunction(() => false); // => true\n * ```\n */\nexport function isFunction(value) {\n    return typeof value === 'function';\n}\n","import { isFunction } from './function.js';\nimport { isObject } from './object.js';\nexport function isOn(...fns) {\n    return (value) => (isObject(value) || isFunction(value)) &&\n        fns.every((f) => isFunction(value[f]));\n}\nexport function isOnFunction(...fns) {\n    return (value) => isFunction(value) &&\n        fns.every((f) => isFunction(value[f]));\n}\nexport function isOnObject(...fns) {\n    return (value) => isObject(value) &&\n        fns.every((f) => isFunction(value[f]));\n}\n","/**\n * @name isObject\n * @summary Tests for an `object`.\n * @description\n * Checks to see if the input value is a JavaScript object.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isObject } from '@polkadot/util';\n *\n * isObject({}); // => true\n * isObject('something'); // => false\n * ```\n */\nexport function isObject(value) {\n    return !!value && typeof value === 'object';\n}\n","const CHR = '0123456789abcdef';\nconst U8 = new Uint8Array(256);\nconst U16 = new Uint8Array(256 * 256);\nfor (let i = 0, count = CHR.length; i < count; i++) {\n    U8[CHR[i].charCodeAt(0) | 0] = i | 0;\n    if (i > 9) {\n        U8[CHR[i].toUpperCase().charCodeAt(0) | 0] = i | 0;\n    }\n}\nfor (let i = 0; i < 256; i++) {\n    const s = i << 8;\n    for (let j = 0; j < 256; j++) {\n        U16[s | j] = (U8[i] << 4) | U8[j];\n    }\n}\n/**\n * @name hexToU8a\n * @summary Creates a Uint8Array object from a hex string.\n * @description\n * `null` inputs returns an empty `Uint8Array` result. Hex input values return the actual bytes value converted to a Uint8Array. Anything that is not a hex string (including the `0x` prefix) throws an error.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexToU8a } from '@polkadot/util';\n *\n * hexToU8a('0x80001f'); // Uint8Array([0x80, 0x00, 0x1f])\n * hexToU8a('0x80001f', 32); // Uint8Array([0x00, 0x80, 0x00, 0x1f])\n * ```\n */\nexport function hexToU8a(value, bitLength = -1) {\n    if (!value) {\n        return new Uint8Array();\n    }\n    let s = value.startsWith('0x')\n        ? 2\n        : 0;\n    const decLength = Math.ceil((value.length - s) / 2);\n    const endLength = Math.ceil(bitLength === -1\n        ? decLength\n        : bitLength / 8);\n    const result = new Uint8Array(endLength);\n    const offset = endLength > decLength\n        ? endLength - decLength\n        : 0;\n    for (let i = offset; i < endLength; i++, s += 2) {\n        // The big factor here is actually the string lookups. If we do\n        // HEX_TO_U16[value.substring()] we get an 10x slowdown. In the\n        // same vein using charCodeAt (as opposed to value[s] or value.charAt(s)) is\n        // also the faster operation by at least 2x with the character map above\n        result[i] = U16[(value.charCodeAt(s) << 8) | value.charCodeAt(s + 1)];\n    }\n    return result;\n}\n","import { isOnObject } from './helpers.js';\nexport const isPromise = /*#__PURE__*/ isOnObject('catch', 'then');\n","export { packageInfo } from './packageInfo.js';\n/** @internal Last-resort \"this\", if it gets here it probably would fail anyway */\nfunction evaluateThis(fn) {\n    return fn('return this');\n}\n/**\n * A cross-environment implementation for globalThis\n */\nexport const xglobal = /*#__PURE__*/ (typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof global !== 'undefined'\n        ? global\n        : typeof self !== 'undefined'\n            ? self\n            : typeof window !== 'undefined'\n                ? window\n                : evaluateThis(Function));\n/**\n * Extracts a known global from the environment, applying a fallback if not found\n */\nexport function extractGlobal(name, fallback) {\n    // Not quite sure why this is here - snuck in with TS 4.7.2 with no real idea\n    // (as of now) as to why this looks like an \"any\" when we do cast it to a T\n    //\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return typeof xglobal[name] === 'undefined'\n        ? fallback\n        : xglobal[name];\n}\n/**\n * Expose a value as a known global, if not already defined\n */\nexport function exposeGlobal(name, fallback) {\n    if (typeof xglobal[name] === 'undefined') {\n        xglobal[name] = fallback;\n    }\n}\n","import { extractGlobal } from '@polkadot/x-global';\nexport { packageInfo } from './packageInfo.js';\n/**\n * @internal\n *\n * There are _still_ some older environments (specifically RN < 0.70), that does\n * not have proper BigInt support - a non-working fallback is provided for those.\n *\n * We detect availability of BigInt upon usage, so this is purely to allow functional\n * compilation & bundling. Since we have operators such as *+-/ top-level, a number-ish\n * result is used here.\n */\nfunction invalidFallback() {\n    return Number.NaN;\n}\nexport const BigInt = /*#__PURE__*/ extractGlobal('BigInt', invalidFallback);\n","import { BigInt } from '@polkadot/x-bigint';\nimport { xglobal } from '@polkadot/x-global';\n/** true if the environment has proper BigInt support */\nexport const hasBigInt = typeof BigInt === 'function' && typeof BigInt.asIntN === 'function';\n/** true if the environment is CJS */\nexport const hasCjs = typeof require === 'function' && typeof module !== 'undefined';\n/** true if the environment has __dirname available */\nexport const hasDirname = typeof __dirname !== 'undefined';\n/** true if the environment is ESM */\nexport const hasEsm = !hasCjs;\n/** true if the environment has WebAssembly available */\nexport const hasWasm = typeof WebAssembly !== 'undefined';\n/** true if the environment has support for Buffer (typically Node.js) */\nexport const hasBuffer = typeof xglobal.Buffer === 'function' && typeof xglobal.Buffer.isBuffer === 'function';\n/** true if the environment has process available (typically Node.js) */\nexport const hasProcess = typeof xglobal.process === 'object';\n","export const REGEX_HEX_PREFIXED = /^0x[\\da-fA-F]+$/;\nexport const REGEX_HEX_NOPREFIX = /^[\\da-fA-F]+$/;\n/**\n * @name isHex\n * @summary Tests for a hex string.\n * @description\n * Checks to see if the input value is a `0x` prefixed hex string. Optionally (`bitLength` !== -1) checks to see if the bitLength is correct.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isHex } from '@polkadot/util';\n *\n * isHex('0x1234'); // => true\n * isHex('0x1234', 8); // => false\n * ```\n */\nexport function isHex(value, bitLength = -1, ignoreLength) {\n    return (typeof value === 'string' && (value === '0x' ||\n        REGEX_HEX_PREFIXED.test(value))) && (bitLength === -1\n        ? (ignoreLength || (value.length % 2 === 0))\n        : (value.length === (2 + Math.ceil(bitLength / 4))));\n}\n","/**\n * @name isU8a\n * @summary Tests for a `Uint8Array` object instance.\n * @description\n * Checks to see if the input object is an instance of `Uint8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isUint8Array } from '@polkadot/util';\n *\n * console.log('isU8a', isU8a([])); // => false\n * ```\n */\nexport function isU8a(value) {\n    // here we defer the instanceof check which is actually slightly\n    // slower than just checking the constrctor (direct instances)\n    return (((value && value.constructor) === Uint8Array) ||\n        value instanceof Uint8Array);\n}\n","export class TextEncoder {\n    encode(value) {\n        const count = value.length;\n        const u8a = new Uint8Array(count);\n        for (let i = 0; i < count; i++) {\n            u8a[i] = value.charCodeAt(i);\n        }\n        return u8a;\n    }\n}\n","import { TextEncoder } from '@polkadot/x-textencoder';\nconst encoder = new TextEncoder();\n/**\n * @name stringToU8a\n * @summary Creates a Uint8Array object from a utf-8 string.\n * @description\n * String input values return the actual encoded `UInt8Array`. `null` or `undefined` values returns an empty encoded array.\n * @example\n * <BR>\n *\n * ```javascript\n * import { stringToU8a } from '@polkadot/util';\n *\n * stringToU8a('hello'); // [0x68, 0x65, 0x6c, 0x6c, 0x6f]\n * ```\n */\nexport function stringToU8a(value) {\n    return value\n        ? encoder.encode(value.toString())\n        : new Uint8Array();\n}\n","import { extractGlobal } from '@polkadot/x-global';\nimport { TextEncoder as Fallback } from './fallback.js';\nexport { packageInfo } from './packageInfo.js';\nexport const TextEncoder = /*#__PURE__*/ extractGlobal('TextEncoder', Fallback);\n","import { hexToU8a } from '../hex/toU8a.js';\nimport { isBuffer } from '../is/buffer.js';\nimport { isHex } from '../is/hex.js';\nimport { isU8a } from '../is/u8a.js';\nimport { stringToU8a } from '../string/toU8a.js';\n/**\n * @name u8aToU8a\n * @summary Creates a Uint8Array value from a Uint8Array, Buffer, string or hex input.\n * @description\n * `null` or `undefined` inputs returns a `[]` result, Uint8Array values returns the value, hex strings returns a Uint8Array representation.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToU8a } from '@polkadot/util';\n *\n * u8aToU8a(new Uint8Array([0x12, 0x34]); // => Uint8Array([0x12, 0x34])\n * u8aToU8a(0x1234); // => Uint8Array([0x12, 0x34])\n * ```\n */\nexport function u8aToU8a(value) {\n    return isU8a(value)\n        // NOTE isBuffer needs to go here since it actually extends\n        // Uint8Array on Node.js environments, so all Buffer are Uint8Array,\n        // but Uint8Array is not Buffer\n        ? isBuffer(value)\n            ? new Uint8Array(value)\n            : value\n        : isHex(value)\n            ? hexToU8a(value)\n            : Array.isArray(value)\n                ? new Uint8Array(value)\n                : stringToU8a(value);\n}\n","import { xglobal } from '@polkadot/x-global';\nimport { hasBuffer } from '../has.js';\nimport { isFunction } from './function.js';\n/**\n * @name isBuffer\n * @summary Tests for a `Buffer` object instance.\n * @description\n * Checks to see if the input object is an instance of `Buffer`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isBuffer } from '@polkadot/util';\n *\n * console.log('isBuffer', isBuffer(Buffer.from([]))); // => true\n * ```\n */\nexport function isBuffer(value) {\n    // we do check a function first, since it is slightly faster than isBuffer itself\n    return hasBuffer && !!value && isFunction(value.readDoubleLE) && xglobal.Buffer.isBuffer(value);\n}\n","import { u8aToU8a } from './toU8a.js';\n/**\n * @name u8aEq\n * @summary Compares two Uint8Arrays for equality.\n * @description\n * For `UInt8Array` (or hex string) input values true if there is a match.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aEq } from '@polkadot/util';\n *\n * u8aEq(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // true\n * ```\n */\nexport function u8aEq(a, b) {\n    const u8aa = u8aToU8a(a);\n    const u8ab = u8aToU8a(b);\n    if (u8aa.length === u8ab.length) {\n        const dvA = new DataView(u8aa.buffer, u8aa.byteOffset);\n        const dvB = new DataView(u8ab.buffer, u8ab.byteOffset);\n        const mod = (u8aa.length % 4) | 0;\n        const length = (u8aa.length - mod) | 0;\n        for (let i = 0; i < length; i += 4) {\n            if (dvA.getUint32(i) !== dvB.getUint32(i)) {\n                return false;\n            }\n        }\n        for (let i = length, count = u8aa.length; i < count; i++) {\n            if (u8aa[i] !== u8ab[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\n","import { u8aToU8a } from './toU8a.js';\n/**\n * @name u8aConcat\n * @summary Creates a concatenated Uint8Array from the inputs.\n * @description\n * Concatenates the input arrays into a single `UInt8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { { u8aConcat } from '@polkadot/util';\n *\n * u8aConcat(\n *   new Uint8Array([1, 2, 3]),\n *   new Uint8Array([4, 5, 6])\n * ); // [1, 2, 3, 4, 5, 6]\n * ```\n */\nexport function u8aConcat(...list) {\n    const count = list.length;\n    const u8as = new Array(count);\n    let length = 0;\n    for (let i = 0; i < count; i++) {\n        u8as[i] = u8aToU8a(list[i]);\n        length += u8as[i].length;\n    }\n    return u8aConcatStrict(u8as, length);\n}\n/**\n * @name u8aConcatStrict\n * @description A strict version of [[u8aConcat]], accepting only Uint8Array inputs\n */\nexport function u8aConcatStrict(u8as, length = 0) {\n    const count = u8as.length;\n    let offset = 0;\n    if (!length) {\n        for (let i = 0; i < count; i++) {\n            length += u8as[i].length;\n        }\n    }\n    const result = new Uint8Array(length);\n    for (let i = 0; i < count; i++) {\n        result.set(u8as[i], offset);\n        offset += u8as[i].length;\n    }\n    return result;\n}\n","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities\n/**\n * @__NO_SIDE_EFFECTS__\n */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction chain(...args) {\n    const id = (a) => a;\n    // Wrap call in closure so JIT can inline calls\n    const wrap = (a, b) => (c) => a(b(c));\n    // Construct chain of args[-1].encode(args[-2].encode([...]))\n    const encode = args.map((x) => x.encode).reduceRight(wrap, id);\n    // Construct chain of args[0].decode(args[1].decode(...))\n    const decode = args.map((x) => x.decode).reduce(wrap, id);\n    return { encode, decode };\n}\n/**\n * Encodes integer radix representation to array of strings using alphabet and back\n * @__NO_SIDE_EFFECTS__\n */\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\n/**\n * Pad strings array so it has integer number of bits\n * @__NO_SIDE_EFFECTS__\n */\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\n/**\n * Slow: O(n^2) time complexity\n * @__NO_SIDE_EFFECTS__\n */\nfunction convertRadix(data, from, to) {\n    // base 1 is impossible\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            const rounded = Math.floor(digitBase / to);\n            digits[i] = rounded;\n            if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!rounded)\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = /* @__NO_SIDE_EFFECTS__ */ (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = /*@__NO_SIDE_EFFECTS__ */ (from, to) => from + (to - gcd(from, to));\n/**\n * Implemented with numbers, because BigInt is 5x slower\n * @__NO_SIDE_EFFECTS__\n */\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0; // bitwise position in current element\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1; // clean carry, otherwise it will cause overflow\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of numbers');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\n/**\n * If both bases are power of same number (like `2**8 <-> 2**64`),\n * there is a linear algorithm. For now we have implementation for power-of-two bases only.\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of numbers');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\n// prettier-ignore\nexport const utils = {\n    alphabet, chain, checksum, convertRadix, convertRadix2, radix, radix2, join, padding,\n};\n// RFC 4648 aka RFC 3548\n// ---------------------\nexport const base16 = /* @__PURE__ */ chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = /* @__PURE__ */ chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = /* @__PURE__ */ chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = /* @__PURE__ */ chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = /* @__PURE__ */ chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = /* @__PURE__ */ chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nexport const base64urlnopad = /* @__PURE__ */ chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), join(''));\n// base58 code\n// -----------\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = /* @__PURE__ */ genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = /* @__PURE__ */ genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = /* @__PURE__ */ genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\n// xmr ver is done in 8-byte blocks (which equals 11 chars in decoding). Last (non-full) block padded with '1' to size in XMR_BLOCK_LEN.\n// Block encoding significantly reduces quadratic complexity of base58.\n// Data len (index) -> encoded block len\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const createBase58check = /* @__PURE__ */ (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\n// legacy export, bad name\nexport const base58check = createBase58check;\nconst BECH_ALPHABET = /* @__PURE__ */ chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        const lowered = prefix.toLowerCase();\n        const sum = bechChecksum(lowered, words, ENCODING_CONST);\n        return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = /* @__PURE__ */ genBech32('bech32');\nexport const bech32m = /* @__PURE__ */ genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = /* @__PURE__ */ chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\n// prettier-ignore\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = 'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!isBytes(bytes))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString; // as in python, but for bytes only\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n","import { u8aToU8a } from '@polkadot/util';\n/** @internal */\nexport function createDecode({ coder, ipfs }, validate) {\n    return (value, ipfsCompat) => {\n        validate(value, ipfsCompat);\n        return coder.decode(ipfs && ipfsCompat\n            ? value.substring(1)\n            : value);\n    };\n}\n/** @internal */\nexport function createEncode({ coder, ipfs }) {\n    return (value, ipfsCompat) => {\n        const out = coder.encode(u8aToU8a(value));\n        return ipfs && ipfsCompat\n            ? `${ipfs}${out}`\n            : out;\n    };\n}\n/** @internal */\nexport function createIs(validate) {\n    return (value, ipfsCompat) => {\n        try {\n            return validate(value, ipfsCompat);\n        }\n        catch {\n            return false;\n        }\n    };\n}\n/** @internal */\nexport function createValidate({ chars, ipfs, type, withPadding }) {\n    return (value, ipfsCompat) => {\n        if (typeof value !== 'string') {\n            throw new Error(`Expected ${type} string input`);\n        }\n        else if (ipfs && ipfsCompat && !value.startsWith(ipfs)) {\n            throw new Error(`Expected ipfs-compatible ${type} to start with '${ipfs}'`);\n        }\n        for (let i = (ipfsCompat ? 1 : 0), count = value.length; i < count; i++) {\n            if (chars.includes(value[i])) {\n                // all ok, character found\n            }\n            else if (withPadding && value[i] === '=') {\n                if (i === count - 1) {\n                    // last character, everything ok\n                }\n                else if (value[i + 1] === '=') {\n                    // next one is also padding, sequence ok\n                }\n                else {\n                    throw new Error(`Invalid ${type} padding sequence \"${value[i]}${value[i + 1]}\" at index ${i}`);\n                }\n            }\n            else {\n                throw new Error(`Invalid ${type} character \"${value[i]}\" (0x${value.charCodeAt(i).toString(16)}) at index ${i}`);\n            }\n        }\n        return true;\n    };\n}\n","import { base58 } from '@scure/base';\nimport { createDecode, createEncode, createIs, createValidate } from '../base32/helpers.js';\nconst config = {\n    chars: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',\n    coder: base58,\n    ipfs: 'z',\n    type: 'base58'\n};\n/**\n * @name base58Validate\n * @summary Validates a base58 value.\n * @description\n * Validates that the supplied value is valid base58, throwing exceptions if not\n */\nexport const base58Validate = /*#__PURE__*/ createValidate(config);\n/**\n * @name base58Decode\n * @summary Decodes a base58 value.\n * @description\n * From the provided input, decode the base58 and return the result as an `Uint8Array`.\n */\nexport const base58Decode = /*#__PURE__*/ createDecode(config, base58Validate);\n/**\n* @name base58Encode\n* @summary Creates a base58 value.\n* @description\n* From the provided input, create the base58 and return the result as a string.\n*/\nexport const base58Encode = /*#__PURE__*/ createEncode(config);\n/**\n* @name isBase58\n* @description Checks if the input is in base58, returning true/false\n*/\nexport const isBase58 = /*#__PURE__*/ createIs(base58Validate);\n","function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\n// copied from utils\nfunction isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\nfunction isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\n// Other libraries would silently corrupt the data instead of throwing an error,\n// when they don't support it.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!isBytes(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!isBytes(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    if (!isBytes(a)) throw new Error('Uint8Array expected');\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","import { number, exists, output } from './_assert.js';\nimport { Hash, Input, toBytes, u32 } from './utils.js';\n\n// Blake is based on ChaCha permutation.\n\n// For BLAKE2b, the two extra permutations for rounds 10 and 11 are SIGMA[10..11] = SIGMA[0..1].\n// prettier-ignore\nexport const SIGMA = /* @__PURE__ */ new Uint8Array([\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n]);\n\nexport type BlakeOpts = {\n  dkLen?: number;\n  key?: Input;\n  salt?: Input;\n  personalization?: Input;\n};\n\nexport abstract class BLAKE2<T extends BLAKE2<T>> extends Hash<T> {\n  protected abstract compress(msg: Uint32Array, offset: number, isLast: boolean): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected buffer: Uint8Array;\n  protected buffer32: Uint32Array;\n  protected length: number = 0;\n  protected pos: number = 0;\n  protected finished = false;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    opts: BlakeOpts = {},\n    keyLen: number,\n    saltLen: number,\n    persLen: number\n  ) {\n    super();\n    number(blockLen);\n    number(outputLen);\n    number(keyLen);\n    if (outputLen < 0 || outputLen > keyLen) throw new Error('outputLen bigger than keyLen');\n    if (opts.key !== undefined && (opts.key.length < 1 || opts.key.length > keyLen))\n      throw new Error(`key must be up 1..${keyLen} byte long or undefined`);\n    if (opts.salt !== undefined && opts.salt.length !== saltLen)\n      throw new Error(`salt must be ${saltLen} byte long or undefined`);\n    if (opts.personalization !== undefined && opts.personalization.length !== persLen)\n      throw new Error(`personalization must be ${persLen} byte long or undefined`);\n    this.buffer32 = u32((this.buffer = new Uint8Array(blockLen)));\n  }\n  update(data: Input) {\n    exists(this);\n    // Main difference with other hashes: there is flag for last block,\n    // so we cannot process current block before we know that there\n    // is the next one. This significantly complicates logic and reduces ability\n    // to do zero-copy processing\n    const { blockLen, buffer, buffer32 } = this;\n    data = toBytes(data);\n    const len = data.length;\n    const offset = data.byteOffset;\n    const buf = data.buffer;\n    for (let pos = 0; pos < len; ) {\n      // If buffer is full and we still have input (don't process last block, same as blake2s)\n      if (this.pos === blockLen) {\n        this.compress(buffer32, 0, false);\n        this.pos = 0;\n      }\n      const take = Math.min(blockLen - this.pos, len - pos);\n      const dataOffset = offset + pos;\n      // full block && aligned to 4 bytes && not last in input\n      if (take === blockLen && !(dataOffset % 4) && pos + take < len) {\n        const data32 = new Uint32Array(buf, dataOffset, Math.floor((len - pos) / 4));\n        for (let pos32 = 0; pos + blockLen < len; pos32 += buffer32.length, pos += blockLen) {\n          this.length += blockLen;\n          this.compress(data32, pos32, false);\n        }\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      this.length += take;\n      pos += take;\n    }\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    const { pos, buffer32 } = this;\n    this.finished = true;\n    // Padding\n    this.buffer.subarray(pos).fill(0);\n    this.compress(buffer32, 0, true);\n    const out32 = u32(out);\n    this.get().forEach((v, i) => (out32[i] = v));\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    const { buffer, length, finished, destroyed, outputLen, pos } = this;\n    to ||= new (this.constructor as any)({ dkLen: outputLen }) as T;\n    to.set(...this.get());\n    to.length = length;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.outputLen = outputLen;\n    to.buffer.set(buffer);\n    to.pos = pos;\n    return to;\n  }\n}\n","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import { BLAKE2, BlakeOpts, SIGMA } from './_blake2.js';\nimport u64 from './_u64.js';\nimport { toBytes, u32, wrapConstructorWithOpts } from './utils.js';\n\n// Same as SHA-512 but LE\n// prettier-ignore\nconst IV = /* @__PURE__ */ new Uint32Array([\n  0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372, 0x5f1d36f1, 0xa54ff53a,\n  0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c, 0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19\n]);\n// Temporary buffer\nconst BUF = /* @__PURE__ */ new Uint32Array(32);\n\n// Mixing function G splitted in two halfs\nfunction G1(a: number, b: number, c: number, d: number, msg: Uint32Array, x: number) {\n  // NOTE: V is LE here\n  const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n  let Al = BUF[2 * a], Ah = BUF[2 * a + 1]; // prettier-ignore\n  let Bl = BUF[2 * b], Bh = BUF[2 * b + 1]; // prettier-ignore\n  let Cl = BUF[2 * c], Ch = BUF[2 * c + 1]; // prettier-ignore\n  let Dl = BUF[2 * d], Dh = BUF[2 * d + 1]; // prettier-ignore\n  // v[a] = (v[a] + v[b] + x) | 0;\n  let ll = u64.add3L(Al, Bl, Xl);\n  Ah = u64.add3H(ll, Ah, Bh, Xh);\n  Al = ll | 0;\n  // v[d] = rotr(v[d] ^ v[a], 32)\n  ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n  ({ Dh, Dl } = { Dh: u64.rotr32H(Dh, Dl), Dl: u64.rotr32L(Dh, Dl) });\n  // v[c] = (v[c] + v[d]) | 0;\n  ({ h: Ch, l: Cl } = u64.add(Ch, Cl, Dh, Dl));\n  // v[b] = rotr(v[b] ^ v[c], 24)\n  ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n  ({ Bh, Bl } = { Bh: u64.rotrSH(Bh, Bl, 24), Bl: u64.rotrSL(Bh, Bl, 24) });\n  (BUF[2 * a] = Al), (BUF[2 * a + 1] = Ah);\n  (BUF[2 * b] = Bl), (BUF[2 * b + 1] = Bh);\n  (BUF[2 * c] = Cl), (BUF[2 * c + 1] = Ch);\n  (BUF[2 * d] = Dl), (BUF[2 * d + 1] = Dh);\n}\n\nfunction G2(a: number, b: number, c: number, d: number, msg: Uint32Array, x: number) {\n  // NOTE: V is LE here\n  const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n  let Al = BUF[2 * a], Ah = BUF[2 * a + 1]; // prettier-ignore\n  let Bl = BUF[2 * b], Bh = BUF[2 * b + 1]; // prettier-ignore\n  let Cl = BUF[2 * c], Ch = BUF[2 * c + 1]; // prettier-ignore\n  let Dl = BUF[2 * d], Dh = BUF[2 * d + 1]; // prettier-ignore\n  // v[a] = (v[a] + v[b] + x) | 0;\n  let ll = u64.add3L(Al, Bl, Xl);\n  Ah = u64.add3H(ll, Ah, Bh, Xh);\n  Al = ll | 0;\n  // v[d] = rotr(v[d] ^ v[a], 16)\n  ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n  ({ Dh, Dl } = { Dh: u64.rotrSH(Dh, Dl, 16), Dl: u64.rotrSL(Dh, Dl, 16) });\n  // v[c] = (v[c] + v[d]) | 0;\n  ({ h: Ch, l: Cl } = u64.add(Ch, Cl, Dh, Dl));\n  // v[b] = rotr(v[b] ^ v[c], 63)\n  ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n  ({ Bh, Bl } = { Bh: u64.rotrBH(Bh, Bl, 63), Bl: u64.rotrBL(Bh, Bl, 63) });\n  (BUF[2 * a] = Al), (BUF[2 * a + 1] = Ah);\n  (BUF[2 * b] = Bl), (BUF[2 * b + 1] = Bh);\n  (BUF[2 * c] = Cl), (BUF[2 * c + 1] = Ch);\n  (BUF[2 * d] = Dl), (BUF[2 * d + 1] = Dh);\n}\n\nclass BLAKE2b extends BLAKE2<BLAKE2b> {\n  // Same as SHA-512, but LE\n  private v0l = IV[0] | 0;\n  private v0h = IV[1] | 0;\n  private v1l = IV[2] | 0;\n  private v1h = IV[3] | 0;\n  private v2l = IV[4] | 0;\n  private v2h = IV[5] | 0;\n  private v3l = IV[6] | 0;\n  private v3h = IV[7] | 0;\n  private v4l = IV[8] | 0;\n  private v4h = IV[9] | 0;\n  private v5l = IV[10] | 0;\n  private v5h = IV[11] | 0;\n  private v6l = IV[12] | 0;\n  private v6h = IV[13] | 0;\n  private v7l = IV[14] | 0;\n  private v7h = IV[15] | 0;\n\n  constructor(opts: BlakeOpts = {}) {\n    super(128, opts.dkLen === undefined ? 64 : opts.dkLen, opts, 64, 16, 16);\n    const keyLength = opts.key ? opts.key.length : 0;\n    this.v0l ^= this.outputLen | (keyLength << 8) | (0x01 << 16) | (0x01 << 24);\n    if (opts.salt) {\n      const salt = u32(toBytes(opts.salt));\n      this.v4l ^= salt[0];\n      this.v4h ^= salt[1];\n      this.v5l ^= salt[2];\n      this.v5h ^= salt[3];\n    }\n    if (opts.personalization) {\n      const pers = u32(toBytes(opts.personalization));\n      this.v6l ^= pers[0];\n      this.v6h ^= pers[1];\n      this.v7l ^= pers[2];\n      this.v7h ^= pers[3];\n    }\n    if (opts.key) {\n      // Pad to blockLen and update\n      const tmp = new Uint8Array(this.blockLen);\n      tmp.set(toBytes(opts.key));\n      this.update(tmp);\n    }\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    let {v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h} = this;\n    return [v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h];\n  }\n  // prettier-ignore\n  protected set(\n    v0l: number, v0h: number, v1l: number, v1h: number,\n    v2l: number, v2h: number, v3l: number, v3h: number,\n    v4l: number, v4h: number, v5l: number, v5h: number,\n    v6l: number, v6h: number, v7l: number, v7h: number\n  ) {\n    this.v0l = v0l | 0;\n    this.v0h = v0h | 0;\n    this.v1l = v1l | 0;\n    this.v1h = v1h | 0;\n    this.v2l = v2l | 0;\n    this.v2h = v2h | 0;\n    this.v3l = v3l | 0;\n    this.v3h = v3h | 0;\n    this.v4l = v4l | 0;\n    this.v4h = v4h | 0;\n    this.v5l = v5l | 0;\n    this.v5h = v5h | 0;\n    this.v6l = v6l | 0;\n    this.v6h = v6h | 0;\n    this.v7l = v7l | 0;\n    this.v7h = v7h | 0;\n  }\n  protected compress(msg: Uint32Array, offset: number, isLast: boolean) {\n    this.get().forEach((v, i) => (BUF[i] = v)); // First half from state.\n    BUF.set(IV, 16); // Second half from IV.\n    let { h, l } = u64.fromBig(BigInt(this.length));\n    BUF[24] = IV[8] ^ l; // Low word of the offset.\n    BUF[25] = IV[9] ^ h; // High word.\n    // Invert all bits for last block\n    if (isLast) {\n      BUF[28] = ~BUF[28];\n      BUF[29] = ~BUF[29];\n    }\n    let j = 0;\n    const s = SIGMA;\n    for (let i = 0; i < 12; i++) {\n      G1(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n      G2(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n      G1(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n      G2(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n      G1(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n      G2(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n      G1(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n      G2(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n\n      G1(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n      G2(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n      G1(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n      G2(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n      G1(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n      G2(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n      G1(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n      G2(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n    }\n    this.v0l ^= BUF[0] ^ BUF[16];\n    this.v0h ^= BUF[1] ^ BUF[17];\n    this.v1l ^= BUF[2] ^ BUF[18];\n    this.v1h ^= BUF[3] ^ BUF[19];\n    this.v2l ^= BUF[4] ^ BUF[20];\n    this.v2h ^= BUF[5] ^ BUF[21];\n    this.v3l ^= BUF[6] ^ BUF[22];\n    this.v3h ^= BUF[7] ^ BUF[23];\n    this.v4l ^= BUF[8] ^ BUF[24];\n    this.v4h ^= BUF[9] ^ BUF[25];\n    this.v5l ^= BUF[10] ^ BUF[26];\n    this.v5h ^= BUF[11] ^ BUF[27];\n    this.v6l ^= BUF[12] ^ BUF[28];\n    this.v6h ^= BUF[13] ^ BUF[29];\n    this.v7l ^= BUF[14] ^ BUF[30];\n    this.v7h ^= BUF[15] ^ BUF[31];\n    BUF.fill(0);\n  }\n  destroy() {\n    this.destroyed = true;\n    this.buffer32.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\n/**\n * BLAKE2b - optimized for 64-bit platforms. JS doesn't have uint64, so it's slower than BLAKE2s.\n * @param msg - message that would be hashed\n * @param opts - dkLen, key, salt, personalization\n */\nexport const blake2b = /* @__PURE__ */ wrapConstructorWithOpts<BLAKE2b, BlakeOpts>(\n  (opts) => new BLAKE2b(opts)\n);\n","import { blake2b as blake2bJs } from '@noble/hashes/blake2b';\nimport { hasBigInt, u8aToU8a } from '@polkadot/util';\nimport { blake2b, isReady } from '@polkadot/wasm-crypto';\nimport { createAsHex } from '../helpers.js';\n/**\n * @name blake2AsU8a\n * @summary Creates a blake2b u8a from the input.\n * @description\n * From a `Uint8Array` input, create the blake2b and return the result as a u8a with the specified `bitLength`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { blake2AsU8a } from '@polkadot/util-crypto';\n *\n * blake2AsU8a('abc'); // => [0xba, 0x80, 0xa5, 0x3f, 0x98, 0x1c, 0x4d, 0x0d]\n * ```\n */\nexport function blake2AsU8a(data, bitLength = 256, key, onlyJs) {\n    const byteLength = Math.ceil(bitLength / 8);\n    const u8a = u8aToU8a(data);\n    return !hasBigInt || (!onlyJs && isReady())\n        ? blake2b(u8a, u8aToU8a(key), byteLength)\n        : key\n            ? blake2bJs(u8a, { dkLen: byteLength, key })\n            : blake2bJs(u8a, { dkLen: byteLength });\n}\n/**\n * @name blake2AsHex\n * @description Creates a blake2b hex from the input.\n */\nexport const blake2AsHex = /*#__PURE__*/ createAsHex(blake2AsU8a);\n","import { stringToU8a, u8aConcat } from '@polkadot/util';\nimport { blake2AsU8a } from '../blake2/asU8a.js';\nconst SS58_PREFIX = stringToU8a('SS58PRE');\nexport function sshash(key) {\n    return blake2AsU8a(u8aConcat(SS58_PREFIX, key), 512);\n}\n","export const knownLedger = {\n    acala: 0x00000313,\n    ajuna: 0x00000162,\n    'aleph-node': 0x00000283,\n    astar: 0x0000032a,\n    bifrost: 0x00000314,\n    'bifrost-kusama': 0x00000314,\n    centrifuge: 0x000002eb,\n    composable: 0x00000162,\n    darwinia: 0x00000162,\n    'dock-mainnet': 0x00000252,\n    edgeware: 0x0000020b,\n    enjin: 0x00000483,\n    equilibrium: 0x05f5e0fd,\n    genshiro: 0x05f5e0fc,\n    hydradx: 0x00000162,\n    'interlay-parachain': 0x00000162,\n    karura: 0x000002ae,\n    khala: 0x000001b2,\n    kusama: 0x000001b2,\n    matrixchain: 0x00000483,\n    nodle: 0x000003eb,\n    origintrail: 0x00000162,\n    parallel: 0x00000162,\n    pendulum: 0x00000162,\n    phala: 0x00000162,\n    picasso: 0x000001b2,\n    polkadex: 0x0000031f,\n    polkadot: 0x00000162,\n    polymesh: 0x00000253,\n    quartz: 0x00000277,\n    sora: 0x00000269,\n    stafi: 0x0000038b,\n    statemine: 0x000001b2, // common-good on Kusama, shares derivation\n    statemint: 0x00000162, // common-good on Polkadot, shares derivation\n    ternoa: 0x00003e3,\n    unique: 0x00000295,\n    vtb: 0x000002b6,\n    xxnetwork: 0x000007a3,\n    zeitgeist: 0x00000162\n};\n","export const knownGenesis = {\n    acala: [\n        '0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c'\n    ],\n    ajuna: [\n        '0xe358eb1d11b31255a286c12e44fe6780b7edb171d657905a97e39f71d9c6c3ee'\n    ],\n    'aleph-node': [\n        '0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e'\n    ],\n    astar: [\n        '0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6'\n    ],\n    basilisk: [\n        '0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755'\n    ],\n    bifrost: [\n        '0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b'\n    ],\n    'bifrost-kusama': [\n        '0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed'\n    ],\n    bittensor: [\n        '0x2f0555cc76fc2840a25a6ea3b9637146806f1f44b090c175ffde2a7e5ab36c03'\n    ],\n    centrifuge: [\n        '0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82',\n        '0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5'\n    ],\n    cere: [\n        '0x81443836a9a24caaa23f1241897d1235717535711d1d3fe24eae4fdc942c092c'\n    ],\n    composable: [\n        '0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d'\n    ],\n    darwinia: [\n        '0xe71578b37a7c799b0ab4ee87ffa6f059a6b98f71f06fb8c84a8d88013a548ad6'\n    ],\n    'dock-mainnet': [\n        '0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae',\n        '0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9'\n    ],\n    edgeware: [\n        '0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b'\n    ],\n    enjin: [\n        '0xd8761d3c88f26dc12875c00d3165f7d67243d56fc85b4cf19937601a7916e5a9'\n    ],\n    equilibrium: [\n        '0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925'\n    ],\n    genshiro: [\n        '0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243'\n    ],\n    hydradx: [\n        '0xafdc188f45c71dacbaa0b62e16a91f726c7b8699a9748cdf715459de6b7f366d', // HydraDX Parachain\n        '0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc', // Snakenet Gen3-1\n        '0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9', // Snakenet Gen3\n        '0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047', // Snakenet Gen2\n        '0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2' // Snakenet Gen1\n    ],\n    'interlay-parachain': [\n        '0xbf88efe70e9e0e916416e8bed61f2b45717f517d7f3523e33c7b001e5ffcbc72'\n    ],\n    karura: [\n        '0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b'\n    ],\n    khala: [\n        '0xd43540ba6d3eb4897c28a77d48cb5b729fea37603cbbfc7a86a73b72adb3be8d'\n    ],\n    kulupu: [\n        '0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba'\n    ],\n    kusama: [\n        '0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe', // Kusama CC3,\n        '0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636', // Kusama CC2\n        '0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf' // Kusama CC1\n    ],\n    matrixchain: [\n        '0x3af4ff48ec76d2efc8476730f423ac07e25ad48f5f4c9dc39c778b164d808615'\n    ],\n    nodle: [\n        '0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21'\n    ],\n    origintrail: [\n        '0xe7e0962324a3b86c83404dbea483f25fb5dab4c224791c81b756cfc948006174'\n    ],\n    p3d: [\n        '0x6c5894837ad89b6d92b114a2fb3eafa8fe3d26a54848e3447015442cd6ef4e66'\n    ],\n    parallel: [\n        '0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97'\n    ],\n    pendulum: [\n        '0x5d3c298622d5634ed019bf61ea4b71655030015bde9beb0d6a24743714462c86'\n    ],\n    phala: [\n        '0x1bb969d85965e4bb5a651abbedf21a54b6b31a21f66b5401cc3f1e286268d736'\n    ],\n    picasso: [\n        '0x6811a339673c9daa897944dcdac99c6e2939cc88245ed21951a0a3c9a2be75bc',\n        '0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c'\n    ],\n    polkadex: [\n        '0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c'\n    ],\n    polkadot: [\n        '0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3'\n    ],\n    polymesh: [\n        '0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063'\n    ],\n    quartz: [\n        '0xcd4d732201ebe5d6b014edda071c4203e16867305332301dc8d092044b28e554'\n    ],\n    rococo: [\n        '0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e',\n        '0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897',\n        '0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770',\n        '0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff',\n        '0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a',\n        '0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9',\n        '0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779',\n        '0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215',\n        '0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9',\n        '0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147',\n        '0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd',\n        '0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299'\n    ],\n    sora: [\n        '0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5'\n    ],\n    stafi: [\n        '0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80'\n    ],\n    statemine: [\n        '0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a'\n    ],\n    statemint: [\n        '0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f'\n    ],\n    subsocial: [\n        '0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8'\n    ],\n    ternoa: [\n        '0x6859c81ca95ef624c9dfe4dc6e3381c33e5d6509e35e147092bfbc780f777c4e'\n    ],\n    unique: [\n        '0x84322d9cddbf35088f1e54e9a85c967a41a56a4f43445768125e61af166c7d31'\n    ],\n    vtb: [\n        '0x286bc8414c7000ce1d6ee6a834e29a54c1784814b76243eb77ed0b2c5573c60f',\n        '0x7483b89572fb2bd687c7b9a93b242d0b237f9aba463aba07ec24503931038aaa'\n    ],\n    westend: [\n        '0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e'\n    ],\n    xxnetwork: [\n        '0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa'\n    ],\n    zeitgeist: [\n        '0x1bf2a2ecb4a868de66ea8610f2ce7c8c43706561b6476031315f6640fe38e060'\n    ]\n};\n","export const knownIcon = {\n    centrifuge: 'polkadot',\n    kusama: 'polkadot',\n    polkadot: 'polkadot',\n    sora: 'polkadot',\n    statemine: 'polkadot',\n    statemint: 'polkadot',\n    westmint: 'polkadot'\n};\n","export const knownTestnet = {\n    '': true, // this is the default non-network entry\n    'cess-testnet': true,\n    'dock-testnet': true,\n    jupiter: true,\n    'mathchain-testnet': true,\n    p3dt: true,\n    subspace_testnet: true,\n    'zero-alphaville': true\n};\n","import knownSubstrate from '@substrate/ss58-registry';\nimport { knownGenesis, knownIcon, knownLedger, knownTestnet } from './defaults/index.js';\nconst UNSORTED = [0, 2, 42];\nconst TESTNETS = ['testnet'];\nfunction toExpanded(o) {\n    const network = o.network || '';\n    const nameParts = network.replace(/_/g, '-').split('-');\n    const n = o;\n    // ledger additions\n    n.slip44 = knownLedger[network];\n    n.hasLedgerSupport = !!n.slip44;\n    // general items\n    n.genesisHash = knownGenesis[network] || [];\n    n.icon = knownIcon[network] || 'substrate';\n    // filtering\n    n.isTestnet = !!knownTestnet[network] || TESTNETS.includes(nameParts[nameParts.length - 1]);\n    n.isIgnored = n.isTestnet || (!(o.standardAccount &&\n        o.decimals?.length &&\n        o.symbols?.length) &&\n        o.prefix !== 42);\n    return n;\n}\nfunction filterSelectable({ genesisHash, prefix }) {\n    return !!genesisHash.length || prefix === 42;\n}\nfunction filterAvailable(n) {\n    return !n.isIgnored && !!n.network;\n}\nfunction sortNetworks(a, b) {\n    const isUnSortedA = UNSORTED.includes(a.prefix);\n    const isUnSortedB = UNSORTED.includes(b.prefix);\n    return isUnSortedA === isUnSortedB\n        ? isUnSortedA\n            ? 0\n            : a.displayName.localeCompare(b.displayName)\n        : isUnSortedA\n            ? -1\n            : 1;\n}\nexport const allNetworks = knownSubstrate.map(toExpanded);\nexport const availableNetworks = allNetworks.filter(filterAvailable).sort(sortNetworks);\nexport const selectableNetworks = availableNetworks.filter(filterSelectable);\n","import { availableNetworks } from '../networks.js';\nexport const defaults = {\n    allowedDecodedLengths: [1, 2, 4, 8, 32, 33],\n    // publicKey has prefix + 2 checksum bytes, short only prefix + 1 checksum byte\n    allowedEncodedLengths: [3, 4, 6, 10, 35, 36, 37, 38],\n    allowedPrefix: availableNetworks.map(({ prefix }) => prefix),\n    prefix: 42\n};\n","import { isHex, isU8a, u8aToU8a } from '@polkadot/util';\nimport { base58Decode } from '../base58/index.js';\nimport { checkAddressChecksum } from './checksum.js';\nimport { defaults } from './defaults.js';\nexport function decodeAddress(encoded, ignoreChecksum, ss58Format = -1) {\n    if (!encoded) {\n        throw new Error('Invalid empty address passed');\n    }\n    if (isU8a(encoded) || isHex(encoded)) {\n        return u8aToU8a(encoded);\n    }\n    try {\n        const decoded = base58Decode(encoded);\n        if (!defaults.allowedEncodedLengths.includes(decoded.length)) {\n            throw new Error('Invalid decoded address length');\n        }\n        const [isValid, endPos, ss58Length, ss58Decoded] = checkAddressChecksum(decoded);\n        if (!isValid && !ignoreChecksum) {\n            throw new Error('Invalid decoded address checksum');\n        }\n        else if (ss58Format !== -1 && ss58Format !== ss58Decoded) {\n            throw new Error(`Expected ss58Format ${ss58Format}, received ${ss58Decoded}`);\n        }\n        return decoded.slice(ss58Length, endPos);\n    }\n    catch (error) {\n        throw new Error(`Decoding ${encoded}: ${error.message}`);\n    }\n}\n","import { sshash } from './sshash.js';\nexport function checkAddressChecksum(decoded) {\n    const ss58Length = (decoded[0] & 64) ? 2 : 1;\n    const ss58Decoded = ss58Length === 1\n        ? decoded[0]\n        : ((decoded[0] & 63) << 2) | (decoded[1] >> 6) | ((decoded[1] & 63) << 8);\n    // 32/33 bytes public + 2 bytes checksum + prefix\n    const isPublicKey = [34 + ss58Length, 35 + ss58Length].includes(decoded.length);\n    const length = decoded.length - (isPublicKey ? 2 : 1);\n    // calculate the hash and do the checksum byte checks\n    const hash = sshash(decoded.subarray(0, length));\n    const isValid = (decoded[0] & 128) === 0 && ![46, 47].includes(decoded[0]) && (isPublicKey\n        ? decoded[decoded.length - 2] === hash[0] && decoded[decoded.length - 1] === hash[1]\n        : decoded[decoded.length - 1] === hash[0]);\n    return [isValid, length, ss58Length, ss58Decoded];\n}\n","import { u8aConcat } from '@polkadot/util';\nimport { base58Encode } from '../base58/index.js';\nimport { decodeAddress } from './decode.js';\nimport { defaults } from './defaults.js';\nimport { sshash } from './sshash.js';\nexport function encodeAddress(key, ss58Format = defaults.prefix) {\n    // decode it, this means we can re-encode an address\n    const u8a = decodeAddress(key);\n    if ((ss58Format < 0) || (ss58Format > 16383) || [46, 47].includes(ss58Format)) {\n        throw new Error('Out of range ss58Format specified');\n    }\n    else if (!defaults.allowedDecodedLengths.includes(u8a.length)) {\n        throw new Error(`Expected a valid key to convert, with length ${defaults.allowedDecodedLengths.join(', ')}`);\n    }\n    const input = u8aConcat(ss58Format < 64\n        ? [ss58Format]\n        : [\n            ((ss58Format & 252) >> 2) | 64,\n            (ss58Format >> 8) | ((ss58Format & 3) << 6)\n        ], u8a);\n    return base58Encode(u8aConcat(input, sshash(input).subarray(0, [32, 33].includes(u8a.length) ? 2 : 1)));\n}\n","export const packageInfo = { name: '@polkadot/extension-dapp', path: (import.meta && import.meta.url) ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '0.46.6' };\n","import { u8aConcatStrict } from './concat.js';\nimport { u8aEq } from './eq.js';\nimport { u8aToU8a } from './toU8a.js';\n/** @internal */\nexport const U8A_WRAP_ETHEREUM = /*#__PURE__*/ u8aToU8a('\\x19Ethereum Signed Message:\\n');\n/** @internal */\nexport const U8A_WRAP_PREFIX = /*#__PURE__*/ u8aToU8a('<Bytes>');\n/** @internal */\nexport const U8A_WRAP_POSTFIX = /*#__PURE__*/ u8aToU8a('</Bytes>');\nconst WRAP_LEN = U8A_WRAP_PREFIX.length + U8A_WRAP_POSTFIX.length;\n/** @internal */\nexport function u8aIsWrapped(u8a, withEthereum) {\n    return ((u8a.length >= WRAP_LEN &&\n        u8aEq(u8a.subarray(0, U8A_WRAP_PREFIX.length), U8A_WRAP_PREFIX) &&\n        u8aEq(u8a.slice(-U8A_WRAP_POSTFIX.length), U8A_WRAP_POSTFIX)) ||\n        (withEthereum &&\n            u8a.length >= U8A_WRAP_ETHEREUM.length &&\n            u8aEq(u8a.subarray(0, U8A_WRAP_ETHEREUM.length), U8A_WRAP_ETHEREUM)));\n}\n/**\n * @name u8aUnwrapBytes\n * @description Removes all <Bytes>...</Bytes> wrappers from the supplied value\n */\nexport function u8aUnwrapBytes(bytes) {\n    const u8a = u8aToU8a(bytes);\n    // we don't want to unwrap Ethereum-style wraps\n    return u8aIsWrapped(u8a, false)\n        ? u8a.subarray(U8A_WRAP_PREFIX.length, u8a.length - U8A_WRAP_POSTFIX.length)\n        : u8a;\n}\n/**\n * @name u8aWrapBytes\n * @description\n * Adds a <Bytes>...</Bytes> wrapper to the supplied value, if\n * - We don't already have a Bytes wrapper\n * - The message is not an Ethereum-style message\n */\nexport function u8aWrapBytes(bytes) {\n    const u8a = u8aToU8a(bytes);\n    return u8aIsWrapped(u8a, true)\n        ? u8a\n        : u8aConcatStrict([U8A_WRAP_PREFIX, u8a, U8A_WRAP_POSTFIX]);\n}\n","import { U8A_WRAP_ETHEREUM, U8A_WRAP_POSTFIX, U8A_WRAP_PREFIX, u8aIsWrapped, u8aUnwrapBytes, u8aWrapBytes } from '@polkadot/util';\nexport const ETHEREUM = U8A_WRAP_ETHEREUM;\nexport const POSTFIX = U8A_WRAP_POSTFIX;\nexport const PREFIX = U8A_WRAP_PREFIX;\nexport const isWrapped = u8aIsWrapped;\nexport const unwrapBytes = u8aUnwrapBytes;\nexport const wrapBytes = u8aWrapBytes;\n","import { isPromise, objectSpread, u8aEq } from '@polkadot/util';\nimport { decodeAddress, encodeAddress } from '@polkadot/util-crypto';\nimport { documentReadyPromise } from './util.js';\nexport { packageInfo } from './packageInfo.js';\nexport { unwrapBytes, wrapBytes } from './wrapBytes.js';\nconst win = window;\nwin.injectedWeb3 = win.injectedWeb3 || {};\nlet isWeb3Injected = web3IsInjected();\nlet web3EnablePromise = null;\nexport { isWeb3Injected, web3EnablePromise };\n/** @internal true when anything has been injected and is available */\nfunction web3IsInjected() {\n    return Object\n        .values(win.injectedWeb3)\n        .filter(({ connect, enable }) => !!(connect || enable))\n        .length !== 0;\n}\n/** @internal throw a consistent error when not extensions have not been enabled */\nfunction throwError(method) {\n    throw new Error(`${method}: web3Enable(originName) needs to be called before ${method}`);\n}\n/** @internal map from Array<InjectedAccount> to Array<InjectedAccountWithMeta> */\nfunction mapAccounts(source, list, ss58Format) {\n    return list.map(({ address, genesisHash, name, type }) => ({\n        address: address.length === 42\n            ? address\n            : encodeAddress(decodeAddress(address), ss58Format),\n        meta: { genesisHash, name, source },\n        type\n    }));\n}\n/** @internal filter accounts based on genesisHash and type of account */\nfunction filterAccounts(list, genesisHash, type) {\n    return list.filter((a) => (!a.type || !type || type.includes(a.type)) &&\n        (!a.genesisHash || !genesisHash || a.genesisHash === genesisHash));\n}\n/** @internal retrieves all the extensions available on the window */\nfunction getWindowExtensions(originName) {\n    return Promise\n        .all(Object\n        .entries(win.injectedWeb3)\n        .map(([nameOrHash, { connect, enable, version }]) => Promise\n        .resolve()\n        .then(() => connect\n        // new style, returning all info\n        ? connect(originName)\n        : enable\n            // previous interface, leakages on name/version\n            ? enable(originName).then((e) => objectSpread({ name: nameOrHash, version: version || 'unknown' }, e))\n            : Promise.reject(new Error('No connect(..) or enable(...) hook found')))\n        .catch(({ message }) => {\n        console.error(`Error initializing ${nameOrHash}: ${message}`);\n    })))\n        .then((exts) => exts.filter((e) => !!e));\n}\n/** @internal Ensure the enable promise is resolved and filter by extensions */\nasync function filterEnable(caller, extensions) {\n    if (!web3EnablePromise) {\n        return throwError(caller);\n    }\n    const sources = await web3EnablePromise;\n    return sources.filter(({ name }) => !extensions ||\n        extensions.includes(name));\n}\n/**\n * @summary Enables all the providers found on the injected window interface\n * @description\n * Enables all injected extensions that has been found on the page. This\n * should be called before making use of any other web3* functions.\n */\nexport function web3Enable(originName, compatInits = []) {\n    if (!originName) {\n        throw new Error('You must pass a name for your app to the web3Enable function');\n    }\n    const initCompat = compatInits.length\n        ? Promise.all(compatInits.map((c) => c().catch(() => false)))\n        : Promise.resolve([true]);\n    web3EnablePromise = documentReadyPromise(() => initCompat.then(() => getWindowExtensions(originName)\n        .then((values) => values.map((e) => {\n        // if we don't have an accounts subscriber, add a single-shot version\n        if (!e.accounts.subscribe) {\n            e.accounts.subscribe = (cb) => {\n                e.accounts\n                    .get()\n                    .then(cb)\n                    .catch(console.error);\n                return () => {\n                    // no ubsubscribe needed, this is a single-shot\n                };\n            };\n        }\n        return e;\n    }))\n        .catch(() => [])\n        .then((values) => {\n        const names = values.map(({ name, version }) => `${name}/${version}`);\n        isWeb3Injected = web3IsInjected();\n        console.info(`web3Enable: Enabled ${values.length} extension${values.length !== 1 ? 's' : ''}: ${names.join(', ')}`);\n        return values;\n    })));\n    return web3EnablePromise;\n}\n/**\n * @summary Retrieves all the accounts across all providers\n * @description\n * This returns the full list of account available (accross all extensions) to\n * the page. Filtereing options are available of a per-extension, per type and\n * per-genesisHash basis. Optionally the accounts can be encoded with the provided\n * ss58Format\n */\nexport async function web3Accounts({ accountType, extensions, genesisHash, ss58Format } = {}) {\n    const accounts = [];\n    const sources = await filterEnable('web3Accounts', extensions);\n    const retrieved = await Promise.all(sources.map(async ({ accounts, name: source }) => {\n        try {\n            const list = await accounts.get();\n            return mapAccounts(source, filterAccounts(list, genesisHash, accountType), ss58Format);\n        }\n        catch {\n            // cannot handle this one\n            return [];\n        }\n    }));\n    retrieved.forEach((result) => {\n        accounts.push(...result);\n    });\n    console.info(`web3Accounts: Found ${accounts.length} address${accounts.length !== 1 ? 'es' : ''}`);\n    return accounts;\n}\n/**\n * @summary Subscribes to all the accounts across all providers\n * @description\n * This is the subscription version of the web3Accounts interface with\n * updates as to when new accounts do become available. The list of filtering\n * options are the same as for the web3Accounts interface.\n */\nexport async function web3AccountsSubscribe(cb, { accountType, extensions, genesisHash, ss58Format } = {}) {\n    const sources = await filterEnable('web3AccountsSubscribe', extensions);\n    const accounts = {};\n    const triggerUpdate = () => cb(Object\n        .entries(accounts)\n        .reduce((result, [source, list]) => {\n        result.push(...mapAccounts(source, filterAccounts(list, genesisHash, accountType), ss58Format));\n        return result;\n    }, []));\n    const unsubs = sources.map(({ accounts: { subscribe }, name: source }) => subscribe((result) => {\n        accounts[source] = result;\n        try {\n            const result = triggerUpdate();\n            if (result && isPromise(result)) {\n                result.catch(console.error);\n            }\n        }\n        catch (error) {\n            console.error(error);\n        }\n    }));\n    return () => {\n        unsubs.forEach((unsub) => {\n            unsub();\n        });\n    };\n}\n/**\n * @summary Finds a specific provider based on the name\n * @description\n * This retrieves a specific source (extension) based on the name. In most\n * cases it should not be needed to call it directly (e.g. it is used internally\n * by calls such as web3FromAddress) but would allow operation on a specific\n * known extension.\n */\nexport async function web3FromSource(source) {\n    if (!web3EnablePromise) {\n        return throwError('web3FromSource');\n    }\n    const sources = await web3EnablePromise;\n    const found = source && sources.find(({ name }) => name === source);\n    if (!found) {\n        throw new Error(`web3FromSource: Unable to find an injected ${source}`);\n    }\n    return found;\n}\n/**\n * @summary Find a specific provider that provides a specific address\n * @description\n * Based on an address, return the provider that has makes this address\n * available to the page.\n */\nexport async function web3FromAddress(address) {\n    if (!web3EnablePromise) {\n        return throwError('web3FromAddress');\n    }\n    const accounts = await web3Accounts();\n    let found;\n    if (address) {\n        const accountU8a = decodeAddress(address);\n        found = accounts.find((account) => u8aEq(decodeAddress(account.address), accountU8a));\n    }\n    if (!found) {\n        throw new Error(`web3FromAddress: Unable to find injected ${address}`);\n    }\n    return web3FromSource(found.meta.source);\n}\n/**\n * @summary List all providers exposed by one source\n * @description\n * For extensions that supply RPC providers, this call would return the list\n * of RPC providers that any extension may supply.\n */\nexport async function web3ListRpcProviders(source) {\n    const { provider } = await web3FromSource(source);\n    if (!provider) {\n        console.warn(`Extension ${source} does not expose any provider`);\n        return null;\n    }\n    return provider.listProviders();\n}\n/**\n * @summary Start an RPC provider provider by a specific source\n * @description\n * For extensions that supply RPC providers, this call would return an\n * enabled provider (initialized with the specific key) from the\n * specified extension source.\n */\nexport async function web3UseRpcProvider(source, key) {\n    const { provider } = await web3FromSource(source);\n    if (!provider) {\n        throw new Error(`Extension ${source} does not expose any provider`);\n    }\n    const meta = await provider.startProvider(key);\n    return { meta, provider };\n}\n","/**\n * @name objectSpread\n * @summary Concats all sources into the destination\n */\nexport function objectSpread(dest, ...sources) {\n    for (let i = 0, count = sources.length; i < count; i++) {\n        const src = sources[i];\n        if (src) {\n            if (typeof src.entries === 'function') {\n                for (const [key, value] of src.entries()) {\n                    dest[key] = value;\n                }\n            }\n            else {\n                Object.assign(dest, src);\n            }\n        }\n    }\n    return dest;\n}\n","export function documentReadyPromise(creator) {\n    return new Promise((resolve) => {\n        if (document.readyState === 'complete') {\n            resolve(creator());\n        }\n        else {\n            window.addEventListener('load', () => resolve(creator()));\n        }\n    });\n}\n"],"names":["isFunction","value","isOnObject","_len3","arguments","length","fns","Array","_key3","isObject","every","f","isPromise","CHR","U8","Uint8Array","U16","i","charCodeAt","toUpperCase","s","j","xglobal","globalThis","global","self","window","Function","extractGlobal","name","fallback","invalidFallback","Number","NaN","BigInt","hasBigInt","hasBuffer","Buffer","isBuffer","process","REGEX_HEX_PREFIXED","isHex","bitLength","undefined","ignoreLength","test","Math","ceil","isU8a","constructor","TextEncoder","_classCallCheck","_createClass","key","count","u8a","encoder","Fallback","stringToU8a","encode","toString","u8aToU8a","readDoubleLE","startsWith","decLength","endLength","result","hexToU8a","isArray","u8aEq","a","b","u8aa","u8ab","dvA","DataView","buffer","byteOffset","dvB","mod","getUint32","u8aConcat","u8as","u8aConcatStrict","offset","set","assertNumber","n","isSafeInteger","Error","concat","isBytes","chain","id","wrap","c","_len","args","_key","map","x","reduceRight","decode","reduce","alphabet","digits","input","letter","index","indexOf","join","separator","from","_step","_iterator","_createForOfIteratorHelper","done","err","e","to","split","padding","bits","chr","data","_step2","_iterator2","push","_step3","_iterator3","end","slice","normalize","fn","convertRadix","pos","res","forEach","d","carry","digit","digitBase","rounded","floor","reverse","gcd","radix2carry","convertRadix2","_step4","mask","pow","_iterator4","radix","num","bytes","radix2","revPadding","replace","genBase58","abc","base58","TypeError","toLowerCase","createDecode","_ref","validate","coder","ipfs","ipfsCompat","substring","createEncode","_ref2","out","createValidate","_ref3","chars","type","withPadding","includes","config","base58Validate","base58Decode","base58Encode","number","lengths","exists","instance","checkFinished","destroyed","finished","output","min","outputLen","u32","arr","Uint32Array","byteLength","toBytes","str","utf8ToBytes","Hash","this","_cloneInto","wrapConstructorWithOpts","hashCons","hashC","msg","opts","update","digest","tmp","blockLen","create","SIGMA","BLAKE2","_Hash","_inherits","_super","_createSuper","_this","keyLen","saltLen","persLen","call","salt","personalization","buffer32","len","buf","compress","take","dataOffset","subarray","data32","pos32","fill","out32","get","v","digestInto","destroy","_to","dkLen","apply","_toConsumableArray","U32_MASK64","_32n","fromBig","h","l","u64","lst","le","Ah","Al","_fromBig","toBig","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","IV","BUF","G1","Xl","Xh","ll","_Dh$Dl","_Dh$Dl2","_u64$add","_Bh$Bl","_Bh$Bl2","G2","_Dh$Dl3","_Dh$Dl4","_u64$add2","_Bh$Bl3","_Bh$Bl4","BLAKE2b","_BLAKE","v0l","v0h","v1l","v1h","v2l","v2h","v3l","v3h","v4l","v4h","v5l","v5h","v6l","v6h","v7l","v7h","keyLength","pers","isLast","_u64$fromBig","blake2b","blake2AsU8a","onlyJs","isReady","blake2bJs","SS58_PREFIX","sshash","knownLedger","acala","ajuna","astar","bifrost","centrifuge","composable","darwinia","edgeware","enjin","equilibrium","genshiro","hydradx","karura","khala","kusama","matrixchain","nodle","origintrail","parallel","pendulum","phala","picasso","polkadex","polkadot","polymesh","quartz","sora","stafi","statemine","statemint","ternoa","unique","vtb","xxnetwork","zeitgeist","knownGenesis","basilisk","bittensor","cere","kulupu","p3d","rococo","subsocial","westend","knownIcon","westmint","knownTestnet","jupiter","p3dt","subspace_testnet","UNSORTED","TESTNETS","availableNetworks","knownSubstrate","o","_o$decimals","_o$symbols","network","nameParts","slip44","hasLedgerSupport","genesisHash","icon","isTestnet","isIgnored","standardAccount","decimals","symbols","prefix","filter","sort","isUnSortedA","displayName","localeCompare","defaults","allowedDecodedLengths","allowedEncodedLengths","allowedPrefix","decodeAddress","encoded","ignoreChecksum","ss58Format","decoded","_checkAddressChecksum","ss58Length","ss58Decoded","isPublicKey","hash","checkAddressChecksum","_checkAddressChecksum2","_slicedToArray","isValid","endPos","error","message","encodeAddress","packageInfo","path","URL","import","pathname","lastIndexOf","version","U8A_WRAP_ETHEREUM","U8A_WRAP_PREFIX","U8A_WRAP_POSTFIX","WRAP_LEN","u8aIsWrapped","withEthereum","unwrapBytes","wrapBytes","win","injectedWeb3","isWeb3Injected","web3IsInjected","web3EnablePromise","Object","values","connect","enable","throwError","method","mapAccounts","source","list","address","meta","filterAccounts","getWindowExtensions","originName","Promise","all","entries","_ref4","nameOrHash","_ref4$","resolve","then","dest","src","_step$value","assign","objectSpread","reject","catch","_ref5","console","exts","filterEnable","_x","_x2","_filterEnable","_asyncToGenerator","_regeneratorRuntime","mark","_callee","caller","extensions","sources","_context","prev","next","abrupt","sent","_ref9","stop","web3Enable","compatInits","creator","initCompat","accounts","subscribe","cb","names","_ref6","info","document","readyState","addEventListener","web3Accounts","_web3Accounts","_callee3","_ref7","accountType","_args3","_context3","_ref11","_callee2","_ref10","_context2","t0","_x9","web3AccountsSubscribe","_x3","_web3AccountsSubscribe","_callee4","_ref8","triggerUpdate","unsubs","_args4","_context4","_ref12","_ref13","_ref14","unsub","web3FromSource","_x4","_web3FromSource","_callee5","found","_context5","find","_ref15","web3FromAddress","_x5","_web3FromAddress","_callee6","accountU8a","_context6","account","web3ListRpcProviders","_x6","_web3ListRpcProviders","_callee7","_yield$web3FromSource","provider","_context7","warn","listProviders","web3UseRpcProvider","_x7","_x8","_web3UseRpcProvider","_callee8","_yield$web3FromSource2","_context8","startProvider"],"sourceRoot":""}