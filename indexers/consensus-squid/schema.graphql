type Module @entity {
  id: ID! @index
  name: String! @index
  extrinsicCount: Int!
  eventCount: Int!
  createdAt: Int! @index
  updatedAt: Int! @index
}

type ExtrinsicName @entity {
  id: ID! @index
  moduleId: String! @index
  name: String! @index
  count: Int!
  createdAt: Int! @index
  updatedAt: Int! @index
}

type EventName @entity {
  id: ID! @index
  moduleId: String! @index
  name: String! @index
  count: Int!
  createdAt: Int! @index
  updatedAt: Int! @index
}

type LogKind @entity {
  id: ID! @index
  kind: String! @index
  count: Int!
  createdAt: Int! @index
  updatedAt: Int! @index
}

type Block @entity {
  id: ID! @index
  height: BigInt! @index
  hash: String! @index
  parentHash: String!
  specId: String!
  stateRoot: String!
  extrinsicsRoot: String!
  spacePledged: BigInt!
  blockchainSize: BigInt!
  owner: String! @index
  extrinsicsCount: Int!
  eventsCount: Int!
  timestamp: BigInt! @index
  date: DateTime! @index
}

type Extrinsic @entity {
  id: ID! @index
  hash: String! @index
  indexInBlock: Int!
  nonce: BigInt!
  name: String! @index
  signer: String! @index
  signature: String! @index
  error: String!
  tip: BigInt!
  fee: BigInt!
  success: Boolean!
  blockId: String! @index
  blockHeight: BigInt! @index
  pos: Int!
  timestamp: BigInt! @index
  date: DateTime! @index
  createdAt: Int! @index
}

type Event @entity {
  id: ID! @index
  indexInBlock: Int!
  name: String! @index
  phase: String!
  pos: Int!
  blockId: String! @index
  accountId: String! @index
  blockHeight: BigInt! @index
  extrinsicId: String! @index
  callId: String! @index
  timestamp: BigInt! @index
  date: DateTime! @index
  createdAt: Int! @index
}

type Log @entity {
  id: ID! @index
  kind: String! @index
  value: String!
  blockId: String! @index
  accountId: String! @index
  createdAt: Int! @index
}

type SlackMessage @entity {
  id: ID! @index
  messageId: String! @index
}