# farmer
type FarmerVoteTotalCount @entity {
  id: ID! @index
  sortId: Int! @index
  accountId: String! @index
  totalVoteCount: Int!
  lastVotedAt: DateTime!
  createdAt: Int!
  updatedAt: Int!
}

type FarmerVoteTotalValue @entity {
  id: ID! @index
  sortId: Int! @index
  accountId: String! @index
  totalVoteValue: BigInt!
  lastVotedAt: DateTime!
  createdAt: Int!
  updatedAt: Int!
}

type FarmerBlockTotalCount @entity {
  id: ID! @index
  sortId: Int! @index
  accountId: String! @index
  totalBlockCount: Int!
  lastBlockedAt: DateTime!
  createdAt: Int!
  updatedAt: Int!
}

type FarmerBlockTotalValue @entity {
  id: ID! @index
  sortId: Int! @index
  accountId: String! @index
  totalBlockValue: BigInt!
  lastBlockedAt: DateTime!
  createdAt: Int!
  updatedAt: Int!
}

type FarmerVoteAndBlockTotalCount @entity {
  id: ID! @index
  sortId: Int! @index
  accountId: String! @index
  totalVoteAndBlockCount: Int!
  lastVotedAndBlockAt: DateTime!
  createdAt: Int!
  updatedAt: Int!
}

type FarmerVoteAndBlockTotalValue @entity {
  id: ID! @index
  sortId: Int! @index
  accountId: String! @index
  totalVoteAndBlockValue: BigInt!
  lastVotedAndBlockAt: DateTime!
  createdAt: Int!
  updatedAt: Int!
}

# operator
type OperatorTotalRewardsCollected @entity {
  id: ID! @index
  sortId: Int! @index
  operatorId: String! @index
  totalRewardsCollected: BigInt!
  lastCollectedAt: DateTime!
  createdAt: Int!
  updatedAt: Int!
}

type OperatorTotalTaxCollected @entity {
  id: ID! @index
  sortId: Int! @index
  operatorId: String! @index
  totalTaxCollected: BigInt!
  lastCollectedAt: DateTime!
  createdAt: Int!
  updatedAt: Int!
}

type OperatorBundleTotalCount @entity {
  id: ID! @index
  sortId: Int! @index
  domainId: String! @index
  operatorId: String! @index
  totalBundleCount: Int!
  lastBundledAt: DateTime!
  createdAt: Int!
  updatedAt: Int!
}

type OperatorDepositsTotalCount @entity {
  id: ID! @index
  sortId: Int! @index
  operatorId: String! @index
  totalDepositCount: Int!
  lastDepositedAt: DateTime!
  createdAt: Int!
  updatedAt: Int!
}

type OperatorDepositsTotalValue @entity {
  id: ID! @index
  sortId: Int! @index
  operatorId: String! @index
  totalDepositValue: BigInt!
  lastDepositedAt: DateTime!
  createdAt: Int!
  updatedAt: Int!
}

type OperatorWithdrawalsTotalCount @entity {
  id: ID! @index
  sortId: Int! @index
  operatorId: String! @index
  totalWithdrawalCount: Int!
  lastWithdrawnAt: DateTime!
  createdAt: Int!
  updatedAt: Int!
}

# nominator/account
type NominatorDepositsTotalCount @entity {
  id: ID! @index
  sortId: Int! @index
  accountId: String! @index
  totalDepositCount: Int!
  lastDepositedAt: DateTime!
  createdAt: Int!
  updatedAt: Int!
}

type NominatorDepositsTotalValue @entity {
  id: ID! @index
  sortId: Int! @index
  accountId: String! @index
  totalDepositValue: BigInt!
  lastDepositedAt: DateTime!
  createdAt: Int!
  updatedAt: Int!
}

type NominatorWithdrawalsTotalCount @entity {
  id: ID! @index
  sortId: Int! @index
  accountId: String! @index
  totalWithdrawalCount: Int!
  lastWithdrawnAt: DateTime!
  createdAt: Int!
  updatedAt: Int!
}
